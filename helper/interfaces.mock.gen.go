// Code generated by MockGen. DO NOT EDIT.
// Source: helper/interfaces.go

// Package helper is a generated GoMock package.
package helper

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHelperInterface is a mock of HelperInterface interface.
type MockHelperInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHelperInterfaceMockRecorder
}

// MockHelperInterfaceMockRecorder is the mock recorder for MockHelperInterface.
type MockHelperInterfaceMockRecorder struct {
	mock *MockHelperInterface
}

// NewMockHelperInterface creates a new mock instance.
func NewMockHelperInterface(ctrl *gomock.Controller) *MockHelperInterface {
	mock := &MockHelperInterface{ctrl: ctrl}
	mock.recorder = &MockHelperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHelperInterface) EXPECT() *MockHelperInterfaceMockRecorder {
	return m.recorder
}

// ComparePassword mocks base method.
func (m *MockHelperInterface) ComparePassword(password, hashedPassword string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComparePassword", password, hashedPassword)
	ret0, _ := ret[0].(error)
	return ret0
}

// ComparePassword indicates an expected call of ComparePassword.
func (mr *MockHelperInterfaceMockRecorder) ComparePassword(password, hashedPassword interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComparePassword", reflect.TypeOf((*MockHelperInterface)(nil).ComparePassword), password, hashedPassword)
}

// GenerateAccessToken mocks base method.
func (m *MockHelperInterface) GenerateAccessToken(token *string, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAccessToken", token, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenerateAccessToken indicates an expected call of GenerateAccessToken.
func (mr *MockHelperInterfaceMockRecorder) GenerateAccessToken(token, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAccessToken", reflect.TypeOf((*MockHelperInterface)(nil).GenerateAccessToken), token, id)
}

// GenerateRefreshToken mocks base method.
func (m *MockHelperInterface) GenerateRefreshToken(token *string, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRefreshToken", token, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenerateRefreshToken indicates an expected call of GenerateRefreshToken.
func (mr *MockHelperInterfaceMockRecorder) GenerateRefreshToken(token, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRefreshToken", reflect.TypeOf((*MockHelperInterface)(nil).GenerateRefreshToken), token, id)
}

// GetToken mocks base method.
func (m *MockHelperInterface) GetToken(authorization string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken", authorization)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetToken indicates an expected call of GetToken.
func (mr *MockHelperInterfaceMockRecorder) GetToken(authorization interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockHelperInterface)(nil).GetToken), authorization)
}

// HashPassword mocks base method.
func (m *MockHelperInterface) HashPassword(password string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HashPassword", password)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HashPassword indicates an expected call of HashPassword.
func (mr *MockHelperInterfaceMockRecorder) HashPassword(password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HashPassword", reflect.TypeOf((*MockHelperInterface)(nil).HashPassword), password)
}

// VerifyToken mocks base method.
func (m *MockHelperInterface) VerifyToken(tokenString string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", tokenString)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *MockHelperInterfaceMockRecorder) VerifyToken(tokenString interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockHelperInterface)(nil).VerifyToken), tokenString)
}
